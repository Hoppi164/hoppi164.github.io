import{S as bn,i as hn,s as _n,k as t,q as k,a as c,l as o,m as e,r as y,h as s,c as l,n as j,b as p,D as u,B as W}from"./index-2dffc822.js";function En(en){let i,J,M,f,cn=`<code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>player1 <span class="token operator">==</span> <span class="token string">'paper'</span> <span class="token operator">&amp;&amp;</span> player2 <span class="token operator">==</span> <span class="token string">'rock'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> <span class="token string">'player1 wins'</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,R,v,x,O,H,b,U,S,h,V,D,m,ln=`<code class="language-javascript"><span class="token keyword">var</span> gamerules <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
	<span class="token literal-property property">scissors</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'scissors'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">paper</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'paper'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">rock</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'rock'</span> <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
gamerules<span class="token punctuation">.</span>scissors<span class="token punctuation">.</span>beats <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>paper<span class="token punctuation">;</span>
gamerules<span class="token punctuation">.</span>paper<span class="token punctuation">.</span>beats <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>rock<span class="token punctuation">;</span>
gamerules<span class="token punctuation">.</span>rock<span class="token punctuation">.</span>beats <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>scissors<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token parameter">player1<span class="token punctuation">,</span> player2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">playing </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>player1<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> vs </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>player2<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>player1<span class="token punctuation">.</span>beats <span class="token operator">===</span> player2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'player 1 wins '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>player2<span class="token punctuation">.</span>beats <span class="token operator">===</span> player1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'player 2 wins'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'draw'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,$,_,K,q,g,un=`<code class="language-javascript">gamerules<span class="token punctuation">.</span>scissors<span class="token punctuation">.</span>beats <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>paper<span class="token punctuation">;</span>
gamerules<span class="token punctuation">.</span>paper<span class="token punctuation">.</span>beats <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>rock<span class="token punctuation">;</span>
gamerules<span class="token punctuation">.</span>rock<span class="token punctuation">.</span>beats <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>scissors<span class="token punctuation">;</span></code>`,I,E,Q,A,w,rn=`<code class="language-javascript"><span class="token keyword">function</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token parameter">player1<span class="token punctuation">,</span> player2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">playing </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>player1<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> vs </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>player2<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>player1<span class="token punctuation">.</span>beats <span class="token operator">===</span> player2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'player 1 wins '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>player2<span class="token punctuation">.</span>beats <span class="token operator">===</span> player1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'player 2 wins'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'draw'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,C,P,Y,B,d,kn=`<code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'starting game'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> scissors <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>scissors<span class="token punctuation">;</span>
<span class="token keyword">var</span> paper <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>paper<span class="token punctuation">;</span>
<span class="token keyword">var</span> rock <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>rock<span class="token punctuation">;</span>

<span class="token function">play</span><span class="token punctuation">(</span>scissors<span class="token punctuation">,</span> scissors<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>scissors<span class="token punctuation">,</span> paper<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>scissors<span class="token punctuation">,</span> rock<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">play</span><span class="token punctuation">(</span>paper<span class="token punctuation">,</span> scissors<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>paper<span class="token punctuation">,</span> paper<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>paper<span class="token punctuation">,</span> rock<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">play</span><span class="token punctuation">(</span>rock<span class="token punctuation">,</span> scissors<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>rock<span class="token punctuation">,</span> paper<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>rock<span class="token punctuation">,</span> rock<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,F,r,L,z,N,T,yn=`<code class="language-javascript"><span class="token keyword">var</span> gamerules <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
	<span class="token literal-property property">scissors</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'scissors'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">paper</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'paper'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">rock</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'rock'</span> <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
gamerules<span class="token punctuation">.</span>scissors<span class="token punctuation">.</span>beats <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>paper<span class="token punctuation">;</span>
gamerules<span class="token punctuation">.</span>paper<span class="token punctuation">.</span>beats <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>rock<span class="token punctuation">;</span>
gamerules<span class="token punctuation">.</span>rock<span class="token punctuation">.</span>beats <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>scissors<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token parameter">player1<span class="token punctuation">,</span> player2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">playing </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>player1<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> vs </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>player2<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>player1<span class="token punctuation">.</span>beats <span class="token operator">===</span> player2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'player 1 wins '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>player2<span class="token punctuation">.</span>beats <span class="token operator">===</span> player1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'player 2 wins'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'draw'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'starting game'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> scissors <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>scissors<span class="token punctuation">;</span>
<span class="token keyword">var</span> paper <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>paper<span class="token punctuation">;</span>
<span class="token keyword">var</span> rock <span class="token operator">=</span> gamerules<span class="token punctuation">.</span>rock<span class="token punctuation">;</span>

<span class="token function">play</span><span class="token punctuation">(</span>scissors<span class="token punctuation">,</span> scissors<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>scissors<span class="token punctuation">,</span> paper<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>scissors<span class="token punctuation">,</span> rock<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">play</span><span class="token punctuation">(</span>paper<span class="token punctuation">,</span> scissors<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>paper<span class="token punctuation">,</span> paper<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>paper<span class="token punctuation">,</span> rock<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">play</span><span class="token punctuation">(</span>rock<span class="token punctuation">,</span> scissors<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>rock<span class="token punctuation">,</span> paper<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">play</span><span class="token punctuation">(</span>rock<span class="token punctuation">,</span> rock<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){i=t("p"),J=k(`A silly childs game can pose an interesting challenge for software development.
Programming the game rules can be approached in many different ways, obviously you could hard code a bunch of \u201Cif statements\u201D however this would be very messy and unsustainable if you needed to add complexity to the game later on, (such as adding new rules)`),M=c(),f=t("pre"),R=c(),v=t("blockquote"),x=t("p"),O=k("Don\u2019t do this ^"),H=c(),b=t("p"),U=k("The better way to solve this would be to implement a data structure built around the game rules."),S=c(),h=t("h3"),V=k("Javascript \u2014 Data structure approach"),D=c(),m=t("pre"),$=c(),_=t("p"),K=k(`The In the first section we define a \u2018Gamerules\u2019 data structure.
This allows us to easily define the rules of the game by setting the \u2018beats\u2019 property on each option`),q=c(),g=t("pre"),I=c(),E=t("p"),Q=k("In the second half we create a \u201CPlay\u201D function which will evaluate player1 and player2 to determine which choice wins."),A=c(),w=t("pre"),C=c(),P=t("p"),Y=k("See below for an example of how to \u201CPlay\u201D the game using this function"),B=c(),d=t("pre"),F=c(),r=t("details"),L=t("summary"),z=k("View Full Code"),N=c(),T=t("pre"),this.h()},l(n){i=o(n,"P",{});var a=e(i);J=y(a,`A silly childs game can pose an interesting challenge for software development.
Programming the game rules can be approached in many different ways, obviously you could hard code a bunch of \u201Cif statements\u201D however this would be very messy and unsustainable if you needed to add complexity to the game later on, (such as adding new rules)`),a.forEach(s),M=l(n),f=o(n,"PRE",{class:!0});var fn=e(f);fn.forEach(s),R=l(n),v=o(n,"BLOCKQUOTE",{});var X=e(v);x=o(X,"P",{});var Z=e(x);O=y(Z,"Don\u2019t do this ^"),Z.forEach(s),X.forEach(s),H=l(n),b=o(n,"P",{});var nn=e(b);U=y(nn,"The better way to solve this would be to implement a data structure built around the game rules."),nn.forEach(s),S=l(n),h=o(n,"H3",{});var sn=e(h);V=y(sn,"Javascript \u2014 Data structure approach"),sn.forEach(s),D=l(n),m=o(n,"PRE",{class:!0});var mn=e(m);mn.forEach(s),$=l(n),_=o(n,"P",{});var an=e(_);K=y(an,`The In the first section we define a \u2018Gamerules\u2019 data structure.
This allows us to easily define the rules of the game by setting the \u2018beats\u2019 property on each option`),an.forEach(s),q=l(n),g=o(n,"PRE",{class:!0});var gn=e(g);gn.forEach(s),I=l(n),E=o(n,"P",{});var pn=e(E);Q=y(pn,"In the second half we create a \u201CPlay\u201D function which will evaluate player1 and player2 to determine which choice wins."),pn.forEach(s),A=l(n),w=o(n,"PRE",{class:!0});var wn=e(w);wn.forEach(s),C=l(n),P=o(n,"P",{});var tn=e(P);Y=y(tn,"See below for an example of how to \u201CPlay\u201D the game using this function"),tn.forEach(s),B=l(n),d=o(n,"PRE",{class:!0});var dn=e(d);dn.forEach(s),F=l(n),r=o(n,"DETAILS",{});var G=e(r);L=o(G,"SUMMARY",{});var on=e(L);z=y(on,"View Full Code"),on.forEach(s),N=l(G),T=o(G,"PRE",{class:!0});var vn=e(T);vn.forEach(s),G.forEach(s),this.h()},h(){j(f,"class","language-javascript"),j(m,"class","language-javascript"),j(g,"class","language-javascript"),j(w,"class","language-javascript"),j(d,"class","language-javascript"),j(T,"class","language-javascript")},m(n,a){p(n,i,a),u(i,J),p(n,M,a),p(n,f,a),f.innerHTML=cn,p(n,R,a),p(n,v,a),u(v,x),u(x,O),p(n,H,a),p(n,b,a),u(b,U),p(n,S,a),p(n,h,a),u(h,V),p(n,D,a),p(n,m,a),m.innerHTML=ln,p(n,$,a),p(n,_,a),u(_,K),p(n,q,a),p(n,g,a),g.innerHTML=un,p(n,I,a),p(n,E,a),u(E,Q),p(n,A,a),p(n,w,a),w.innerHTML=rn,p(n,C,a),p(n,P,a),u(P,Y),p(n,B,a),p(n,d,a),d.innerHTML=kn,p(n,F,a),p(n,r,a),u(r,L),u(L,z),u(r,N),u(r,T),T.innerHTML=yn},p:W,i:W,o:W,d(n){n&&s(i),n&&s(M),n&&s(f),n&&s(R),n&&s(v),n&&s(H),n&&s(b),n&&s(S),n&&s(h),n&&s(D),n&&s(m),n&&s($),n&&s(_),n&&s(q),n&&s(g),n&&s(I),n&&s(E),n&&s(A),n&&s(w),n&&s(C),n&&s(P),n&&s(B),n&&s(d),n&&s(F),n&&s(r)}}}const Tn={layout:"post",title:"Paper Scissors Rock",date:"2021-08-26",slug:"paper-scissors-rock"};class jn extends bn{constructor(i){super(),hn(this,i,null,En,_n,{})}}export{jn as default,Tn as metadata};
